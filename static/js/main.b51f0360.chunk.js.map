{"version":3,"sources":["timer/startCountDown.js","state/State.js","timer/Timer.js","controls/Controls.js","App.js","index.js"],"names":["startCountDown","timeLeft","timeArray","document","querySelector","innerText","split","minutes","parseInt","seconds","isSessionTime","changeToBreak","play","classList","remove","changeToSession","countDown","changeToBreakOrSession","add","setInterval","setBreakTime","setSessionTime","setSessionId","setControls","RESET","basicState","breakTime","sessionTime","sessionId","blockControls","reducer","state","action","type","payload","Timer","dispatch","id","onClick","event","target","clearInterval","pause","currentTime","preload","src","Controls","session","handlePause","handleSession","App","useEffect","script","createElement","async","body","appendChild","removeChild","useReducer","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b51f0360.chunk.js","sourcesContent":["\nconst startCountDown = () => {\n  let timeArray = document.querySelector('#time-left').innerText.split(':')\n  let minutes = parseInt(timeArray[0])\n  let seconds = parseInt(timeArray[1])\n  let isSessionTime = true\n  let timeLeft\n\n  const changeToBreak = () => {\n    document.querySelector('#timer-label').innerText = 'Break Time'\n    document.querySelector('#beep').play()\n    document.querySelector('#time-left').classList.remove('red')\n    minutes = document.querySelector('#break-length').innerText\n    seconds = 1\n    isSessionTime = false\n  }\n\n  const changeToSession = () => {\n    document.querySelector('#timer-label').innerText = 'Session'\n    document.querySelector('#beep').play()\n    document.querySelector('#time-left').classList.remove('red')\n    minutes = document.querySelector('#session-length').innerText\n    seconds = 1\n    isSessionTime = true\n  }\n\n  let countDown = changeToBreakOrSession => {\n    if (seconds === 0) {\n      minutes -= 1\n      seconds = 60\n    }\n    seconds -= 1\n    if (minutes < 1) document.querySelector('#time-left').classList.add('red')\n    timeLeft = `${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + seconds : seconds}`\n    if (minutes === 0 && seconds === 0) changeToBreakOrSession()\n  }\n\n\n  let intervalID = setInterval(() => {\n    if (isSessionTime) countDown(changeToBreak)\n    else countDown(changeToSession)\n    document.querySelector('#time-left').innerText = timeLeft\n  }, 1000)\n  return intervalID\n}\n\nexport default startCountDown;\n","const setBreakTime = 'BreakTime'\nconst setSessionTime = 'SessionTime'\nconst setSessionId = 'SessionId'\nconst setControls = 'Controls'\nconst RESET = 'reset'\n\nconst basicState = {\n  breakTime: 5,\n  sessionTime: 25,\n  sessionId: '',\n  blockControls: false\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case setBreakTime:\n      return {...state, breakTime: action.payload}\n    case setSessionTime:\n      return {...state, sessionTime: action.payload}\n    case setSessionId:\n      return {...state, sessionId: action.payload}\n    case setControls:\n      return {...state, blockControls: action.payload}\n    case RESET:\n      return basicState\n    default:\n      return state\n  }\n\n}\n\nexport {\n  reducer,\n  basicState,\n  RESET,\n  setControls,\n  setBreakTime,\n  setSessionId,\n  setSessionTime\n};\n\n\n","import React from 'react'\nimport startCountDown from './startCountDown'\nimport './timer.css'\nimport {\n  RESET,\n  setControls,\n  setSessionId,\n} from '../state/State'\n\n\nconst Timer = ({state, dispatch}) => {\n  let sessionTime = state.sessionTime\n\n  const handlePlayPause = event => {\n    let command = event.target.innerText\n    if (command === 'PLAY >') {\n      event.target.innerText = 'PAUSE ||'\n      let countDown = startCountDown()\n      dispatch({type: setSessionId, payload: countDown})\n      dispatch({type: setControls, payload: true})\n    } else {\n      event.target.innerText = 'PLAY >'\n      clearInterval(state.sessionId)\n      dispatch({type: setControls, payload: false})\n    }\n  }\n\n  const handleReset = () => {\n    clearInterval(state.sessionId)\n    dispatch({type: RESET})\n    document.querySelector('#start_stop').innerText = 'PLAY >'\n    document.querySelector('#time-left').innerText = '25:00'\n    document.querySelector('#timer-label').innerText = 'Session'\n    document.querySelector('#time-left').classList.remove('red')\n    document.querySelector('#beep').pause()\n    document.querySelector('#beep').currentTime = 0\n  }\n\n  return (\n    <div id='timer'>\n      <h2 id='timer-label'>Session</h2>\n      <p id='time-left'>\n        {`${sessionTime < 10 ? '0' + sessionTime : sessionTime}:00`}\n      </p>\n      <div>\n        <button id='start_stop' onClick={handlePlayPause}>Play ></button>\n        <button id='reset' onClick={handleReset}>reset</button>\n      </div>\n      <audio\n        id=\"beep\"\n        preload=\"auto\"\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n      />\n    </div>\n  )\n}\n\nexport default Timer;\n\n","import React from 'react'\nimport './controls.css'\nimport {\n  setBreakTime,\n  setSessionTime\n} from '../state/State'\n\nconst Controls = ({state, dispatch}) => {\n  let pause = state.breakTime\n  let session = state.sessionTime\n\n  const handlePause = event => {\n    if (state.blockControls) return\n    if (event.target.innerText === '^') {\n      if (pause < 60) dispatch({type: setBreakTime, payload: pause + 1})\n      return\n    }\n    if (pause > 1) dispatch({type: setBreakTime, payload: pause - 1})\n  }\n\n\n  const handleSession = event => {\n    if (state.blockControls) return\n    if (event.target.innerText === '^') {\n      if (session < 60) dispatch({type: setSessionTime, payload: session + 1})\n      return\n    }\n    if (session > 1) dispatch({type: setSessionTime, payload: session - 1})\n  }\n\n\n  return (\n    <div id='controler'>\n      <div id='break-label'>\n        <h2>Break Length</h2>\n        <div>\n          <button id='break-increment' onClick={handlePause}>^</button>\n          <p id='break-length'>{pause}</p>\n          <button id='break-decrement' onClick={handlePause}>v</button>\n        </div>\n      </div>\n      <div id='session-label'>\n        <h2>Session Length</h2>\n        <div>\n          <button id='session-increment' onClick={handleSession}>^</button>\n          <p id='session-length'>{session}</p>\n          <button id='session-decrement' onClick={handleSession}>v</button>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Controls;\n","import './App.css';\nimport {useReducer, useEffect} from 'react'\nimport Timer from './timer/Timer'\nimport Controls from './controls/Controls'\nimport {reducer, basicState} from './state/State'\n\nconst App = () => {\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\"\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    }\n  }, [])\n\n  const [state, dispatch] = useReducer(reducer, basicState)\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Work Break Time</h1>\n      </header>\n      <Controls\n        state={state}\n        dispatch={dispatch}\n      />\n      <Timer\n        state={state}\n        dispatch={dispatch}\n      />\n      <footer>\n        <h4>Made by <span>Piotr Lenartowicz</span></h4>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}